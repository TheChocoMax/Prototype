---
const { placeholder } = Astro.props;
---

<div class="search-bar">
    <input type="text" placeholder={placeholder} />
    <button>Search</button>
</div>

<style>
    input {
        background: transparent;
        border: 1px solid #ccc;
        border-radius: 4px;
        padding: var(--spacing-small);
        width: 100%;
    }

    button {
        background-color: #007bff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        padding: var(--spacing-small);
    }

    button:hover {
        background-color: #0056b3;
    }

    .search-bar {
        display: flex;
        flex: 1;
        width: 100%;
    }

    .search-bar input {
        min-width: var(--card-size);
    }

    @media screen and (width<=850px) {
        .search-bar input {
            flex: 1;
            min-width: 0;
        }
    }
</style>

<script type="module" is:inline>
    let debounceTimeout;

    function handleSearch(input) {
        const query = input.value.trim().toLowerCase();
        const products = document.querySelectorAll('.product-card');

        products.forEach(product => {
            const name = product.querySelector('h1')?.textContent.toLowerCase() || '';
            product.style.display = (query && name.includes(query)) ? 'flex' : (query ? 'none' : 'flex');
        });
    }

    function initSearchBar() {
        const input = document.querySelector('.search-bar input');
        const button = document.querySelector('.search-bar button');

        button.addEventListener('click', () => handleSearch(input));

        input.addEventListener('input', () => {
            clearTimeout(debounceTimeout);
            debounceTimeout = setTimeout(() => handleSearch(input), 500);
        });
    }

    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initSearchBar);
    } else {
        initSearchBar();
    }
</script>
